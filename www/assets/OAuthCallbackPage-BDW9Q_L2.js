import{R as x,r as O,j as t,B as g,T as h,$ as R,G as w}from"./index-Cr_aSuNE.js";const S=()=>{const s=x(),[f,a]=O.useState(null);if(O.useEffect(()=>{(async()=>{try{const e=window.location.href,o=new URLSearchParams(window.location.search),m=o.get("platform")==="ios";if(console.log("[OAuth Callback] Processing URL:",e),console.log("[OAuth Callback] Platform:",m?"Native iOS (from URL param)":"Web"),console.log("[OAuth Callback] All URL parameters:"),o.forEach((r,n)=>{console.log(`  - ${n}: ${r}`)}),m){console.log("[OAuth Callback] Native iOS request detected!"),console.log("[OAuth Callback] ✅ Universal Links will open the app automatically!"),console.log("[OAuth Callback] Current URL:",window.location.href);const r=o.get("error"),n=o.get("error_description");if(r){console.error("[OAuth Callback] OAuth Error:",r),console.error("[OAuth Callback] Error Description:",n),a(`OAuth Fehler: ${n||r}`);return}const l=window.location.hash.substring(1);if(console.log("[OAuth Callback] URL Fragment present:",!!l),!l){console.error("[OAuth Callback] No fragment found in URL"),console.error("[OAuth Callback] Full URL:",window.location.href),a("Keine Authentifizierungsdaten gefunden.");return}const c=new URLSearchParams(l),p=c.get("access_token"),A=c.get("refresh_token");if(console.log("[OAuth Callback] Access token present:",!!p),console.log("[OAuth Callback] Refresh token present:",!!A),!p||!A){console.error("[OAuth Callback] Missing tokens in fragment"),a("Authentifizierungsdaten unvollständig.");return}console.log("[OAuth Callback] ✅ Tokens verified! Redirecting to app...");const C=`habdawas://auth/callback#${l}`;console.log("[OAuth Callback] Redirecting to:",C),setTimeout(()=>{window.location.href=C},100);return}const u=window.location.hash.substring(1),d=u.includes("access_token");if(console.log("[OAuth Callback] Has hash fragment:",!!u),console.log("[OAuth Callback] Has hash tokens:",d),d){console.log("[OAuth Callback] Using implicit flow (tokens in hash)");const r=new URLSearchParams(u),n=r.get("access_token"),l=r.get("refresh_token");if(n){console.log("[OAuth Callback] Setting session from hash tokens...");const{error:c}=await w.auth.setSession({access_token:n,refresh_token:l||""});if(c){console.error("[OAuth Callback] Session error:",c),a("Anmeldung fehlgeschlagen. Bitte versuche es erneut."),setTimeout(()=>s("/"),3e3);return}console.log("[OAuth Callback] Success! Redirecting to home..."),s("/",{replace:!0});return}}console.log("[OAuth Callback] Web platform - exchanging code for session...");const{error:b}=await w.auth.exchangeCodeForSession(e);if(b){console.error("[OAuth Callback] Exchange error:",b),a("Anmeldung fehlgeschlagen. Bitte versuche es erneut."),setTimeout(()=>s("/"),3e3);return}console.log("[OAuth Callback] Success! Redirecting to home..."),s("/",{replace:!0})}catch(e){console.error("[OAuth Callback] Error:",e),a("Ein Fehler ist aufgetreten. Du wirst weitergeleitet..."),setTimeout(()=>s("/"),3e3)}})()},[s]),f){const k=new URLSearchParams(window.location.search),e=[];return k.forEach((o,i)=>{e.push(`${i}: ${o}`)}),t.jsxs(g,{sx:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",minHeight:"100vh",gap:2,p:3},children:[t.jsx(h,{variant:"h6",color:"error",children:f}),e.length>0&&t.jsxs(g,{sx:{mt:2,p:2,bgcolor:"#f5f5f5",borderRadius:1,width:"100%",maxWidth:500},children:[t.jsx(h,{variant:"subtitle2",sx:{mb:1,fontWeight:"bold"},children:"Debug Info:"}),e.map((o,i)=>t.jsx(h,{variant:"body2",sx:{fontFamily:"monospace",fontSize:"0.8rem"},children:o},i))]})]})}return t.jsxs(g,{sx:{display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",minHeight:"100vh",gap:2},children:[t.jsx(R,{size:60}),t.jsx(h,{variant:"h6",children:"Anmeldung wird verarbeitet..."})]})};export{S as OAuthCallbackPage};
